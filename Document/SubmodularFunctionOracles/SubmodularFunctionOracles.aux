\relax 
\providecommand\hyper@newdestlabel[2]{}
\bibstyle{plain}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introductions}{3}{section.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}How to Use Submodular Function Oracle}{4}{section.2}}
\newlabel{C++OraclePic}{{2}{4}{How to Use Submodular Function Oracle}{section.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Example of oracle by C++}}{4}{figure.1}}
\newlabel{CSOraclePic}{{2}{4}{How to Use Submodular Function Oracle}{figure.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Example of oracle by C\#}}{4}{figure.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Submodular Function Oracle: Base Class}{5}{subsection.2.1}}
\newlabel{oracleBase}{{2.1}{5}{Submodular Function Oracle: Base Class}{subsection.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Submodular Function Oracles: Derived Class}{7}{subsection.2.2}}
\newlabel{oracleDrived}{{2.2}{7}{Submodular Function Oracles: Derived Class}{subsection.2.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}How to Use Submodular Function Minimization Algorithms}{9}{section.3}}
\newlabel{C++MinPic}{{3}{9}{How to Use Submodular Function Minimization Algorithms}{section.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Example of minimization by C++}}{9}{figure.3}}
\newlabel{CSMinPic}{{3}{9}{How to Use Submodular Function Minimization Algorithms}{figure.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Example of minimization by C\#}}{9}{figure.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Submodular Function Minimization}{10}{subsection.3.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}SFMResult Class}{11}{subsection.3.2}}
\newlabel{outputSFMResult}{{3.2}{12}{SFMResult Class}{subsection.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Output file by Output()}}{12}{figure.5}}
\@writefile{toc}{\contentsline {section}{\numberline {4}How to develop Submodular Function Oracle}{13}{section.4}}
\newlabel{C++OracleDef}{{4}{13}{How to develop Submodular Function Oracle}{section.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Example of a header file by C++}}{13}{figure.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Constructor}{13}{subsection.4.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}CalcValue()}{13}{subsection.4.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}CalcBase()}{13}{subsection.4.3}}
\newlabel{C++ConstOracleImp}{{4.1}{14}{Constructor}{subsection.4.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces The implementation for constructor of a modular function}}{14}{figure.7}}
\newlabel{C++GetValueModular}{{4.2}{14}{CalcValue()}{subsection.4.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces The implementation for GetValue() of a modular function}}{14}{figure.8}}
\newlabel{C++CalcBaseModular}{{4.3}{15}{CalcBase()}{subsection.4.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces The implementation for GetBase() of a modular function by C++}}{15}{figure.9}}
\newlabel{CSCalcBaseModular}{{4.3}{15}{CalcBase()}{figure.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces The implementation for GetBase() of a modular function by C\#}}{15}{figure.10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}destructor}{15}{subsection.4.4}}
\bibdata{sfo.bib}
\@writefile{toc}{\contentsline {section}{\numberline {5}How to develop Submodular Function Minimization Algorithms}{16}{section.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Minimization()}{16}{subsection.5.1}}
\newlabel{C++Min}{{5.1}{16}{Minimization()}{subsection.5.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces The implementation for Minimization() by a brute force algorithm by C++}}{16}{figure.11}}
\newlabel{CSMin}{{5.1}{17}{Minimization()}{figure.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces The implementation for Minimization() of a brute force algorithm by C\#}}{17}{figure.12}}
